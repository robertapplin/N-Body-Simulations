name: Testing - Windows

on:
  pull_request:
    branches: [ main ]
  schedule:
    - cron:  '0 12 * * FRI'

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash -l {0}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v2.2.0
      with:
        miniforge-version: latest
        miniforge-variant: Mambaforge
        activate-environment: test-env
        environment-file: conda/testing.yml
        python-version: 3.8
        auto-activate-base: false
    - name: Build & Install Project
      env:
        LIBRARY_DIR: C:/Miniconda3/envs/test-env/Library
        PYBIND11_DIR: C:/Miniconda3/envs/test-env/Library/share/cmake/pybind11
        PYTHON: C:/Miniconda3/envs/test-env/python.exe
        SITE_PACKAGE_DIR: C:/Miniconda3/envs/test-env/Lib/site-packages
      run: |
        mkdir build && cd build

        cmake -DPYTHON_EXECUTABLE=$PYTHON -Dpybind11_DIR=$PYBIND11_DIR -DCMAKE_INSTALL_PREFIX=$LIBRARY_DIR -DCMAKE_INSTALL_LIBDIR=$SITE_PACKAGE_DIR -G "Visual Studio 17 2022" -A x64 ..

        cmake --build . --config Release
        cmake --build . --config Release --target install

        cd ../
        $PYTHON -m pip install --ignore-installed .
    - name: Cpp Unit Tests
      env:
        TESTPATH: ${{ github.workspace }}/build/tests/unit_tests/cpp/Release
      run: |
        $TESTPATH/NBodySimulationsUnitTests.exe
    - name: Cpp System Tests
      env:
        TESTPATH: ${{ github.workspace }}/build/tests/system_tests/cpp/Release
      run: |
        $TESTPATH/NBodySimulationsSystemTests.exe
    - name: Python Unit Tests
      run: |
        coverage run -m pytest tests/unit_tests/python/
    - name: Report Unit Test Coverage
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        coveralls --service=github
        coverage report
    - name: Python System Tests
      run: |
        pytest tests/system_tests/python/

name: Windows

on:
  pull_request:
    branches: [ main ]
  schedule:
    - cron:  '0 12 * * FRI'

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash -l {0}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v2.2.0
      with:
        miniforge-version: latest
        miniforge-variant: Mambaforge
        activate-environment: n-body-env
        python-version: 3.8
        auto-activate-base: false
    - name: Build Project
      run: |
        conda install conda-build
        cd conda && conda build .
    - name: Install Project
      run: |
        conda install --use-local n-body-simulations
    - name: Cpp Unit Tests
      env:
        TESTPATH: ${{ github.workspace }}/build/temp.win-amd64-cpython-38/Release/tests/unit_tests/cpp/Release
      run: |
        $TESTPATH/NBodySimulationsUnitTests.exe
    - name: Cpp System Tests
      env:
        TESTPATH: ${{ github.workspace }}/build/temp.win-amd64-cpython-38/Release/tests/system_tests/cpp/Release
      run: |
        $TESTPATH/NBodySimulationsSystemTests.exe
    - name: Python Unit Tests
      env:
        PYTHONPATH: ${{ github.workspace }}/build/temp.win-amd64-cpython-38/Release/cpp/simulator/Release/
      run: |
        coverage run -m pytest tests/unit_tests/python/
    - name: Report Unit Test Coverage
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        coveralls --service=github
        coverage report
    - name: Python System Tests
      env:
        PYTHONPATH: ${{ github.workspace }}/build/temp.win-amd64-cpython-38/Release/cpp/simulator/Release/
      run: |
        pytest tests/system_tests/python/
